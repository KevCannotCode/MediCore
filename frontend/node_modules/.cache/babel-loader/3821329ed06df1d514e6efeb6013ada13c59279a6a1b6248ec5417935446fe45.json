{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Downloads\\\\MediCore\\\\frontend\\\\src\\\\Components\\\\Appointment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/style.css\"; // Add your styles here if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Appointment = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    meetingTime: \"\",\n    doctorEmail: \"\",\n    reason_for_appointment: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Retrieve JWT token from storage (e.g., localStorage)\n    const token = localStorage.getItem(\"token\"); // Replace with your storage method if different\n\n    try {\n      const response = await fetch(\"http://localhost:8080/Appointments/createAppointment\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ` + token // Include JWT token in the Authorization header\n        },\n        body: JSON.stringify({\n          doctorEmail: formData.doctorEmail,\n          // Map `doctor` field to `doctorEmail`\n          date: formData.meetingTime,\n          // Map `meetingTime` field to `date`\n          reason_for_appointment: formData.reason_for_appointment // Map `message` field to `reason_for_appointment`\n        })\n      });\n      if (!response.ok) {\n        // Handle non-200 responses\n        const errorText = await response.text(); // Get error response as plain text\n        console.error(\"Server error:\", errorText);\n        alert(`Error: ${response.status} - ${errorText}`);\n        return;\n      }\n      const result = await response.json();\n      alert(result[0].message); // Show success message\n    } catch (error) {\n      console.error(\"Error creating appointment:\", error);\n      alert(\"An error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Doctor Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: formData.doctorEmail,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        id: \"date\",\n        name: \"date\",\n        min: \"2024-25-07T00:00\",\n        max: \"2030-12-14T00:00\",\n        value: formData.meetingTime,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"reason\",\n        children: \"Reason For Appointment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"reason\",\n        name: \"reason\",\n        value: formData.reason_for_appointment,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Schedule Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n};\n_s(Appointment, \"A1+faUhsfuI1aVM7lPteQC6ZVbA=\");\n_c = Appointment;\nexport default Appointment;\nvar _c;\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Appointment","_s","formData","setFormData","meetingTime","doctorEmail","reason_for_appointment","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","token","localStorage","getItem","response","fetch","method","headers","Authorization","body","JSON","stringify","date","ok","errorText","text","console","error","alert","status","result","json","message","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","min","max","_c","$RefreshReg$"],"sources":["C:/Users/kevin/Downloads/MediCore/frontend/src/Components/Appointment.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/style.css\"; // Add your styles here if needed\r\n\r\nconst Appointment = () => {\r\n  const [formData, setFormData] = useState({\r\n    meetingTime: \"\",\r\n    doctorEmail: \"\",\r\n    reason_for_appointment: \"\"\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    // Retrieve JWT token from storage (e.g., localStorage)\r\n    const token = localStorage.getItem(\"token\"); // Replace with your storage method if different\r\n  \r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/Appointments/createAppointment\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer `+token, // Include JWT token in the Authorization header\r\n        },\r\n        body: JSON.stringify({\r\n          doctorEmail: formData.doctorEmail, // Map `doctor` field to `doctorEmail`\r\n          date: formData.meetingTime, // Map `meetingTime` field to `date`\r\n          reason_for_appointment: formData.reason_for_appointment, // Map `message` field to `reason_for_appointment`\r\n        }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        // Handle non-200 responses\r\n        const errorText = await response.text(); // Get error response as plain text\r\n        console.error(\"Server error:\", errorText);\r\n        alert(`Error: ${response.status} - ${errorText}`);\r\n        return;\r\n      }\r\n  \r\n      const result = await response.json();\r\n      alert(result[0].message); // Show success message\r\n    } catch (error) {\r\n      console.error(\"Error creating appointment:\", error);\r\n      alert(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n      <form onSubmit={handleSubmit} className=\"form-container\">\r\n      <div>\r\n          <label htmlFor=\"email\">Doctor Email:</label>\r\n          <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={ formData.doctorEmail }\r\n              onChange={ handleChange }\r\n          />\r\n      </div>\r\n      <div>\r\n          <label htmlFor=\"date\">Date:</label>\r\n          <input\r\n              type=\"datetime-local\"\r\n              id=\"date\"\r\n              name=\"date\"\r\n              min=\"2024-25-07T00:00\"\r\n              max=\"2030-12-14T00:00\"\r\n              value={ formData.meetingTime }\r\n              onChange={ handleChange }\r\n          />\r\n      </div>\r\n      <div>\r\n          <label htmlFor=\"reason\">Reason For Appointment:</label>\r\n          <textarea\r\n              id=\"reason\"\r\n              name=\"reason\"\r\n              value={ formData.reason_for_appointment }\r\n              onChange={ handleChange }\r\n          />  \r\n      </div>\r\n      <button type=\"submit\">\r\n          Schedule Appointment\r\n      </button>\r\n  </form>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}