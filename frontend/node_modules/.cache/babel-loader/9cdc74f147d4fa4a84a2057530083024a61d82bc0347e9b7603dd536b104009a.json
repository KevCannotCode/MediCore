{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Downloads\\\\MediCore\\\\frontend\\\\src\\\\ComponentsKevin\\\\testTable\\\\page.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { columns } from \"./columns\";\nimport { DataTable } from \"./data-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getAppointments = async () => {\n  // Fetch data from your API here.\n  // const res = await fetch(\"http://localhost:8080/Appointments/getAppointments\")\n  // const data = await res.json()\n  // return data\n  return [{\n    id: \"test-1\",\n    doctor: \"Dr. John Doe\",\n    reason_for_appointment: \"Checkup\",\n    treatment: \"None\",\n    date: new Date(),\n    allergies: \"None\",\n    conditions: \"None\",\n    medications: \"None\",\n    immunizations: \"None\",\n    procedures: \"None\"\n  }, {\n    id: \"test-2\",\n    doctor: \"Dr. Jane Doe\",\n    reason_for_appointment: \"Checkup\",\n    treatment: \"None\",\n    date: new Date(),\n    allergies: \"None\",\n    conditions: \"None\",\n    medications: \"None\",\n    immunizations: \"None\",\n    procedures: \"None\"\n  }, {\n    id: \"test-3\",\n    doctor: \"Dr. Jane Doe\",\n    reason_for_appointment: \"Checkup\",\n    treatment: \"None\",\n    date: new Date(),\n    allergies: \"None\",\n    conditions: \"None\",\n    medications: \"None\",\n    immunizations: \"None\",\n    procedures: \"None\"\n  }, {\n    id: \"test-1\",\n    doctor: \"Dr. John Doe\",\n    reason_for_appointment: \"Checkup\",\n    treatment: \"None\",\n    date: new Date(),\n    allergies: \"None\",\n    conditions: \"None\",\n    medications: \"None\",\n    immunizations: \"None\",\n    procedures: \"None\"\n  }, {\n    id: \"test-2\",\n    doctor: \"Dr. Jane Doe\",\n    reason_for_appointment: \"Checkup\",\n    treatment: \"None\",\n    date: new Date(),\n    allergies: \"None\",\n    conditions: \"None\",\n    medications: \"None\",\n    immunizations: \"None\",\n    procedures: \"None\"\n  }, {\n    id: \"test-3\",\n    doctor: \"Dr. Jane Doe\",\n    reason_for_appointment: \"Checkup\",\n    treatment: \"None\",\n    date: new Date(),\n    allergies: \"None\",\n    conditions: \"None\",\n    medications: \"None\",\n    immunizations: \"None\",\n    procedures: \"None\"\n  }, {\n    id: \"test-1\",\n    doctor: \"Dr. John Doe\",\n    reason_for_appointment: \"Checkup\",\n    treatment: \"None\",\n    date: new Date(),\n    allergies: \"None\",\n    conditions: \"None\",\n    medications: \"None\",\n    immunizations: \"None\",\n    procedures: \"None\"\n  }, {\n    id: \"test-2\",\n    doctor: \"Dr. Jane Doe\",\n    reason_for_appointment: \"Checkup\",\n    treatment: \"None\",\n    date: new Date(),\n    allergies: \"None\",\n    conditions: \"None\",\n    medications: \"None\",\n    immunizations: \"None\",\n    procedures: \"None\"\n  }, {\n    id: \"test-3\",\n    doctor: \"Dr. Jane Doe\",\n    reason_for_appointment: \"Checkup\",\n    treatment: \"None\",\n    date: new Date(),\n    allergies: \"None\",\n    conditions: \"None\",\n    medications: \"None\",\n    immunizations: \"None\",\n    procedures: \"None\"\n  }, {\n    id: \"test-1\",\n    doctor: \"Dr. John Doe\",\n    reason_for_appointment: \"Checkup\",\n    treatment: \"None\",\n    date: new Date(),\n    allergies: \"None\",\n    conditions: \"None\",\n    medications: \"None\",\n    immunizations: \"None\",\n    procedures: \"None\"\n  }, {\n    id: \"test-2\",\n    doctor: \"Dr. Jane Doe\",\n    reason_for_appointment: \"Checkup\",\n    treatment: \"None\",\n    date: new Date(),\n    allergies: \"None\",\n    conditions: \"None\",\n    medications: \"None\",\n    immunizations: \"None\",\n    procedures: \"None\"\n  }, {\n    id: \"test-3\",\n    doctor: \"Dr. Jane Doe\",\n    reason_for_appointment: \"Checkup\",\n    treatment: \"None\",\n    date: new Date(),\n    allergies: \"None\",\n    conditions: \"None\",\n    medications: \"None\",\n    immunizations: \"None\",\n    procedures: \"None\"\n  }\n  // Add more test data...\n  ];\n};\nconst DemoPage = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const appointments = await getAppointments();\n      setData(appointments);\n    };\n    fetchData();\n  }, []);\n  const handleSubmit = updatedData => {\n    console.log(\"Submitted data:\", updatedData);\n    // Perform API call to submit data here\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"py-24\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold\",\n        children: \"Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto py-10 overflow-auto\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          columns: columns,\n          data: data,\n          onSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(DemoPage, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = DemoPage;\nexport default DemoPage;\nvar _c;\n$RefreshReg$(_c, \"DemoPage\");","map":{"version":3,"names":["React","useState","useEffect","columns","DataTable","jsxDEV","_jsxDEV","getAppointments","id","doctor","reason_for_appointment","treatment","date","Date","allergies","conditions","medications","immunizations","procedures","DemoPage","_s","data","setData","fetchData","appointments","handleSubmit","updatedData","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/kevin/Downloads/MediCore/frontend/src/ComponentsKevin/testTable/page.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { AppointmentEntry, columns } from \"./columns\"\r\nimport { DataTable } from \"./data-table\"\r\n\r\nconst getAppointments = async (): Promise<AppointmentEntry[]> => {\r\n    // Fetch data from your API here.\r\n    // const res = await fetch(\"http://localhost:8080/Appointments/getAppointments\")\r\n    // const data = await res.json()\r\n    // return data\r\n    return [\r\n      { id: \"test-1\", \r\n        doctor: \"Dr. John Doe\", \r\n        reason_for_appointment: \"Checkup\",\r\n        treatment: \"None\",\r\n        date: new Date(),\r\n        allergies: \"None\",\r\n        conditions: \"None\",\r\n        medications: \"None\",\r\n        immunizations: \"None\",\r\n        procedures: \"None\"},\r\n      { id: \"test-2\",\r\n        doctor: \"Dr. Jane Doe\",\r\n        reason_for_appointment: \"Checkup\",\r\n        treatment: \"None\",\r\n        date: new Date(),\r\n        allergies: \"None\",\r\n        conditions: \"None\",\r\n        medications: \"None\",\r\n        immunizations: \"None\",\r\n        procedures: \"None\"},\r\n        { id: \"test-3\",\r\n        doctor: \"Dr. Jane Doe\",\r\n        reason_for_appointment: \"Checkup\",\r\n        treatment: \"None\",\r\n        date: new Date(),\r\n        allergies: \"None\",\r\n        conditions: \"None\",\r\n        medications: \"None\",\r\n        immunizations: \"None\",\r\n        procedures: \"None\"\r\n        },\r\n        { id: \"test-1\", \r\n          doctor: \"Dr. John Doe\", \r\n          reason_for_appointment: \"Checkup\",\r\n          treatment: \"None\",\r\n          date: new Date(),\r\n          allergies: \"None\",\r\n          conditions: \"None\",\r\n          medications: \"None\",\r\n          immunizations: \"None\",\r\n          procedures: \"None\"},\r\n        { id: \"test-2\",\r\n          doctor: \"Dr. Jane Doe\",\r\n          reason_for_appointment: \"Checkup\",\r\n          treatment: \"None\",\r\n          date: new Date(),\r\n          allergies: \"None\",\r\n          conditions: \"None\",\r\n          medications: \"None\",\r\n          immunizations: \"None\",\r\n          procedures: \"None\"},\r\n          { id: \"test-3\",\r\n          doctor: \"Dr. Jane Doe\",\r\n          reason_for_appointment: \"Checkup\",\r\n          treatment: \"None\",\r\n          date: new Date(),\r\n          allergies: \"None\",\r\n          conditions: \"None\",\r\n          medications: \"None\",\r\n          immunizations: \"None\",\r\n          procedures: \"None\"\r\n          },\r\n          { id: \"test-1\", \r\n            doctor: \"Dr. John Doe\", \r\n            reason_for_appointment: \"Checkup\",\r\n            treatment: \"None\",\r\n            date: new Date(),\r\n            allergies: \"None\",\r\n            conditions: \"None\",\r\n            medications: \"None\",\r\n            immunizations: \"None\",\r\n            procedures: \"None\"},\r\n          { id: \"test-2\",\r\n            doctor: \"Dr. Jane Doe\",\r\n            reason_for_appointment: \"Checkup\",\r\n            treatment: \"None\",\r\n            date: new Date(),\r\n            allergies: \"None\",\r\n            conditions: \"None\",\r\n            medications: \"None\",\r\n            immunizations: \"None\",\r\n            procedures: \"None\"},\r\n            { id: \"test-3\",\r\n            doctor: \"Dr. Jane Doe\",\r\n            reason_for_appointment: \"Checkup\",\r\n            treatment: \"None\",\r\n            date: new Date(),\r\n            allergies: \"None\",\r\n            conditions: \"None\",\r\n            medications: \"None\",\r\n            immunizations: \"None\",\r\n            procedures: \"None\"\r\n            }\r\n          ,\r\n          { id: \"test-1\", \r\n            doctor: \"Dr. John Doe\", \r\n            reason_for_appointment: \"Checkup\",\r\n            treatment: \"None\",\r\n            date: new Date(),\r\n            allergies: \"None\",\r\n            conditions: \"None\",\r\n            medications: \"None\",\r\n            immunizations: \"None\",\r\n            procedures: \"None\"},\r\n          { id: \"test-2\",\r\n            doctor: \"Dr. Jane Doe\",\r\n            reason_for_appointment: \"Checkup\",\r\n            treatment: \"None\",\r\n            date: new Date(),\r\n            allergies: \"None\",\r\n            conditions: \"None\",\r\n            medications: \"None\",\r\n            immunizations: \"None\",\r\n            procedures: \"None\"},\r\n            { id: \"test-3\",\r\n            doctor: \"Dr. Jane Doe\",\r\n            reason_for_appointment: \"Checkup\",\r\n            treatment: \"None\",\r\n            date: new Date(),\r\n            allergies: \"None\",\r\n            conditions: \"None\",\r\n            medications: \"None\",\r\n            immunizations: \"None\",\r\n            procedures: \"None\"\r\n            }\r\n      // Add more test data...\r\n    ];\r\n  };\r\n\r\n  const DemoPage: React.FC = () => {\r\n    const [data, setData] = useState<AppointmentEntry[]>([]);\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const appointments = await getAppointments();\r\n        setData(appointments);\r\n      };\r\n      fetchData();\r\n    }, []);\r\n\r\n    const handleSubmit = (updatedData: AppointmentEntry[]) => {\r\n      console.log(\"Submitted data:\", updatedData);\r\n      // Perform API call to submit data here\r\n    };\r\n\r\n  return (\r\n    <section className=\"py-24\">\r\n      <div className=\"flex-container\">\r\n      <h1 className=\"text-4xl font-bold\">Appointments</h1>\r\n      <div className=\"container mx-auto py-10 overflow-auto\">\r\n        <DataTable columns={columns} data={data} onSubmit={handleSubmit} />\r\n      </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default DemoPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}