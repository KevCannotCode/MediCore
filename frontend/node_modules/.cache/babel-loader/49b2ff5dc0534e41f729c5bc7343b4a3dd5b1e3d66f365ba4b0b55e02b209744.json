{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Downloads\\\\MediCore\\\\frontend\\\\src\\\\ComponentsKevin\\\\testTable\\\\data-table.tsx\",\n  _s = $RefreshSig$();\nimport { flexRender, getCoreRowModel, useReactTable } from \"@tanstack/react-table\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"../../components/ui/table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DataTable({\n  columns,\n  data\n}) {\n  _s();\n  var _table$getRowModel$ro;\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rounded-md border\",\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n        children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: headerGroup.headers.map(header => {\n            return /*#__PURE__*/_jsxDEV(TableHead, {\n              children: header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())\n            }, header.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this);\n          })\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: (_table$getRowModel$ro = table.getRowModel().rows) !== null && _table$getRowModel$ro !== void 0 && _table$getRowModel$ro.length ? table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          \"data-state\": row.getIsSelected() && \"selected\",\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: flexRender(cell.column.columnDef.cell, cell.getContext())\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: columns.length,\n            className: \"h-24 text-center\",\n            children: \"No results.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(DataTable, \"+qfJc9U8evODZQ8bBg9G2KVouAc=\", false, function () {\n  return [useReactTable];\n});\n_c = DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","flexRender","getCoreRowModel","useReactTable","Table","TableBody","TableCell","TableHead","TableHeader","TableRow","jsxDEV","_jsxDEV","DataTable","columns","data","_table$getRowModel$ro","table","className","children","getHeaderGroups","map","headerGroup","headers","header","isPlaceholder","column","columnDef","getContext","id","fileName","lineNumber","columnNumber","getRowModel","rows","length","row","getIsSelected","getVisibleCells","cell","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/kevin/Downloads/MediCore/frontend/src/ComponentsKevin/testTable/data-table.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport {\r\n  ColumnDef,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  useReactTable,\r\n} from \"@tanstack/react-table\"\r\n\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"../../components/ui/table\"\r\n\r\ninterface DataTableProps<TData, TValue> {\r\n  columns: ColumnDef<TData, TValue>[]\r\n  data: TData[]\r\n}\r\n\r\nexport function DataTable<TData, TValue>({\r\n  columns,\r\n  data,\r\n}: DataTableProps<TData, TValue>) {\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    getCoreRowModel: getCoreRowModel(),\r\n  })\r\n\r\n  return (\r\n    <div className=\"rounded-md border\">\r\n      <Table>\r\n        <TableHeader>\r\n          {table.getHeaderGroups().map((headerGroup) => (\r\n            <TableRow key={headerGroup.id}>\r\n              {headerGroup.headers.map((header) => {\r\n                return (\r\n                  <TableHead key={header.id}>\r\n                    {header.isPlaceholder\r\n                      ? null\r\n                      : flexRender(\r\n                          header.column.columnDef.header,\r\n                          header.getContext()\r\n                        )}\r\n                  </TableHead>\r\n                )\r\n              })}\r\n            </TableRow>\r\n          ))}\r\n        </TableHeader>\r\n        <TableBody>\r\n          {table.getRowModel().rows?.length ? (\r\n            table.getRowModel().rows.map((row) => (\r\n              <TableRow\r\n                key={row.id}\r\n                data-state={row.getIsSelected() && \"selected\"}\r\n              >\r\n                {row.getVisibleCells().map((cell) => (\r\n                  <TableCell key={cell.id}>\r\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))\r\n          ) : (\r\n            <TableRow>\r\n              <TableCell colSpan={columns.length} className=\"h-24 text-center\">\r\n                No results.\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}