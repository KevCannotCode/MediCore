{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Downloads\\\\MediCore\\\\frontend\\\\src\\\\ComponentsKevin\\\\testTable\\\\page.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { columns } from \"./columns\";\nimport { DataTable } from \"./data-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getAppointments = async () => {\n  // Fetch data from your API here.\n  // const res = await fetch(\"http://localhost:8080/Appointments/getAppointments\")\n  // const data = await res.json()\n  // return data\n  return [{\n    id: \"test-1\",\n    doctor: \"Dr. John Doe\",\n    reason_for_appointment: \"Checkup\"\n  }\n  // Add more test data...\n  ];\n};\nconst DemoPage = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const appointments = await getAppointments();\n      setData(appointments);\n    };\n    fetchData();\n  }, []);\n\n  // export default async function DemoPage() {\n  //   const data = await getAppointments()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto py-10\",\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(DemoPage, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = DemoPage;\nexport default DemoPage;\nvar _c;\n$RefreshReg$(_c, \"DemoPage\");","map":{"version":3,"names":["React","useState","useEffect","columns","DataTable","jsxDEV","_jsxDEV","getAppointments","id","doctor","reason_for_appointment","DemoPage","_s","data","setData","fetchData","appointments","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kevin/Downloads/MediCore/frontend/src/ComponentsKevin/testTable/page.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { AppointmentEntry, columns } from \"./columns\"\r\nimport { DataTable } from \"./data-table\"\r\n\r\nconst getAppointments = async (): Promise<AppointmentEntry[]> => {\r\n    // Fetch data from your API here.\r\n    // const res = await fetch(\"http://localhost:8080/Appointments/getAppointments\")\r\n    // const data = await res.json()\r\n    // return data\r\n    return [\r\n      { id: \"test-1\", doctor: \"Dr. John Doe\", reason_for_appointment: \"Checkup\" },\r\n      // Add more test data...\r\n    ];\r\n  };\r\n\r\n  const DemoPage: React.FC = () => {\r\n    const [data, setData] = useState<AppointmentEntry[]>([]);\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const appointments = await getAppointments();\r\n        setData(appointments);\r\n      };\r\n      fetchData();\r\n    }, []);\r\n\r\n// export default async function DemoPage() {\r\n//   const data = await getAppointments()\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-10\">\r\n      <DataTable columns={columns} data={data} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DemoPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAA2BC,OAAO,QAAQ,WAAW;AACrD,SAASC,SAAS,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAyC;EAC7D;EACA;EACA;EACA;EACA,OAAO,CACL;IAAEC,EAAE,EAAE,QAAQ;IAAEC,MAAM,EAAE,cAAc;IAAEC,sBAAsB,EAAE;EAAU;EAC1E;EAAA,CACD;AACH,CAAC;AAED,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAqB,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,YAAY,GAAG,MAAMT,eAAe,CAAC,CAAC;MAC5CO,OAAO,CAACE,YAAY,CAAC;IACvB,CAAC;IACDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEV;EACA;;EAEE,oBACET,OAAA;IAAKW,SAAS,EAAC,yBAAyB;IAAAC,QAAA,eACtCZ,OAAA,CAACF,SAAS;MAACD,OAAO,EAAEA,OAAQ;MAACU,IAAI,EAAEA;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAAAV,EAAA,CAnBOD,QAAkB;AAAAY,EAAA,GAAlBZ,QAAkB;AAqB1B,eAAeA,QAAQ;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}