{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Downloads\\\\MediCore\\\\frontend\\\\src\\\\pages\\\\Appointments\\\\AppointmentList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { columns } from \"../../components/Appointments/columns\";\nimport { DataTable } from \"../../components/Appointments/data-table\";\nimport '../../styles/global.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getAppointments = async () => {\n  // Fetch data from your API here.\n  let token = localStorage.getItem(\"token\"); // Replace with your storage method if different\n  if (token && token.startsWith(\"Bearer \")) {\n    token = token.slice(7).toString();\n  }\n  const tokenized = token;\n  const res = await fetch(\"http://localhost:8080/Appointments/getAllAppointments\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...(token && {\n        Authorization: token\n      }) // Include JWT token in the Authorization header if it exists\n    }\n  });\n  const data = await res.json();\n  console.log(data.data);\n  return data.data;\n\n  // return [\n  //   { id: \"test-1\", \n  //     doctor: \"Dr. John Doe\", \n  //     reason_for_appointment: \"Checkup\",\n  //     treatment: \"None\",\n  //     date: new Date(),\n  //     allergies: \"None\",\n  //     conditions: \"None\",\n  //     medications: \"None\",\n  //     immunizations: \"None\",\n  //     procedures: \"None\"},\n  //   { id: \"test-2\",\n  //     doctor: \"Dr. Jane Doe\",\n  //     reason_for_appointment: \"Checkup\",\n  //     treatment: \"None\",\n  //     date: new Date(),\n  //     allergies: \"None\",\n  //     conditions: \"None\",\n  //     medications: \"None\",\n  //     immunizations: \"None\",\n  //     procedures: \"None\"},\n  //     { id: \"test-3\",\n  //     doctor: \"Dr. Jane Doe\",\n  //     reason_for_appointment: \"Checkup\",\n  //     treatment: \"None\",\n  //     date: new Date(),\n  //     allergies: \"None\",\n  //     conditions: \"None\",\n  //     medications: \"None\",\n  //     immunizations: \"None\",\n  //     procedures: \"None\"\n  //     },\n  //     { id: \"test-1\", \n  //       doctor: \"Dr. John Doe\", \n  //       reason_for_appointment: \"Checkup\",\n  //       treatment: \"None\",\n  //       date: new Date(),\n  //       allergies: \"None\",\n  //       conditions: \"None\",\n  //       medications: \"None\",\n  //       immunizations: \"None\",\n  //       procedures: \"None\"},\n  //     { id: \"test-2\",\n  //       doctor: \"Dr. Jane Doe\",\n  //       reason_for_appointment: \"Checkup\",\n  //       treatment: \"None\",\n  //       date: new Date(),\n  //       allergies: \"None\",\n  //       conditions: \"None\",\n  //       medications: \"None\",\n  //       immunizations: \"None\",\n  //       procedures: \"None\"},\n  //       { id: \"test-3\",\n  //       doctor: \"Dr. Jane Doe\",\n  //       reason_for_appointment: \"Checkup\",\n  //       treatment: \"None\",\n  //       date: new Date(),\n  //       allergies: \"None\",\n  //       conditions: \"None\",\n  //       medications: \"None\",\n  //       immunizations: \"None\",\n  //       procedures: \"None\"\n  //       },\n  //       { id: \"test-1\", \n  //         doctor: \"Dr. John Doe\", \n  //         reason_for_appointment: \"Checkup\",\n  //         treatment: \"None\",\n  //         date: new Date(),\n  //         allergies: \"None\",\n  //         conditions: \"None\",\n  //         medications: \"None\",\n  //         immunizations: \"None\",\n  //         procedures: \"None\"},\n  //       { id: \"test-2\",\n  //         doctor: \"Dr. Jane Doe\",\n  //         reason_for_appointment: \"Checkup\",\n  //         treatment: \"None\",\n  //         date: new Date(),\n  //         allergies: \"None\",\n  //         conditions: \"None\",\n  //         medications: \"None\",\n  //         immunizations: \"None\",\n  //         procedures: \"None\"},\n  //         { id: \"test-3\",\n  //         doctor: \"Dr. Jane Doe\",\n  //         reason_for_appointment: \"Checkup\",\n  //         treatment: \"None\",\n  //         date: new Date(),\n  //         allergies: \"None\",\n  //         conditions: \"None\",\n  //         medications: \"None\",\n  //         immunizations: \"None\",\n  //         procedures: \"None\"\n  //         }\n  //       ,\n  //       { id: \"test-1\", \n  //         doctor: \"Dr. John Doe\", \n  //         reason_for_appointment: \"Checkup\",\n  //         treatment: \"None\",\n  //         date: new Date(),\n  //         allergies: \"None\",\n  //         conditions: \"None\",\n  //         medications: \"None\",\n  //         immunizations: \"None\",\n  //         procedures: \"None\"},\n  //       { id: \"test-2\",\n  //         doctor: \"Dr. Jane Doe\",\n  //         reason_for_appointment: \"Checkup\",\n  //         treatment: \"None\",\n  //         date: new Date(),\n  //         allergies: \"None\",\n  //         conditions: \"None\",\n  //         medications: \"None\",\n  //         immunizations: \"None\",\n  //         procedures: \"None\"},\n  //         { id: \"test-3\",\n  //         doctor: \"Dr. Jane Doe\",\n  //         reason_for_appointment: \"Checkup\",\n  //         treatment: \"None\",\n  //         date: new Date(),\n  //         allergies: \"None\",\n  //         conditions: \"None\",\n  //         medications: \"None\",\n  //         immunizations: \"None\",\n  //         procedures: \"None\"\n  //         }\n  //   // Add more test data...\n  // ];\n};\nconst AppointmentList = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const appointments = await getAppointments();\n      setData(appointments);\n    };\n    fetchData();\n  }, []);\n\n  // const handleSubmit = (updatedData: AppointmentEntry[]) => {\n  //   console.log(\"Submitted data:\", updatedData);\n  //   // Perform API call to submit data here\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"py-24\",\n    style: {\n      maxHeight: \"100vh\",\n      overflow: \"auto\"\n    } /* Add custom styles here */,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold\",\n        children: \"Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto py-10 overflow-auto\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          columns: columns,\n          data: data\n          // onSubmit={handleSubmit} \n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentList, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = AppointmentList;\nexport default AppointmentList;\nvar _c;\n$RefreshReg$(_c, \"AppointmentList\");","map":{"version":3,"names":["React","useState","useEffect","columns","DataTable","jsxDEV","_jsxDEV","getAppointments","token","localStorage","getItem","startsWith","slice","toString","tokenized","res","fetch","method","headers","Authorization","data","json","console","log","AppointmentList","_s","setData","fetchData","appointments","className","style","maxHeight","overflow","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kevin/Downloads/MediCore/frontend/src/pages/Appointments/AppointmentList.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { AppointmentEntry, columns } from \"../../components/Appointments/columns\"\r\nimport { DataTable } from \"../../components/Appointments/data-table\"\r\n\r\nimport '../../styles/global.css';\r\n\r\nconst getAppointments = async (): Promise<AppointmentEntry[]> => {\r\n    // Fetch data from your API here.\r\n    let token = localStorage.getItem(\"token\"); // Replace with your storage method if different\r\n    if (token && token.startsWith(\"Bearer \")) {\r\n      token = token.slice(7).toString();\r\n    }\r\n\r\n    const tokenized = token;\r\n    const res = await fetch(\"http://localhost:8080/Appointments/getAllAppointments\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ...(token && { Authorization: token }), // Include JWT token in the Authorization header if it exists\r\n      }\r\n    });\r\n    const data = await res.json();\r\n    console.log(data.data);\r\n    return data.data;\r\n\r\n    // return [\r\n    //   { id: \"test-1\", \r\n    //     doctor: \"Dr. John Doe\", \r\n    //     reason_for_appointment: \"Checkup\",\r\n    //     treatment: \"None\",\r\n    //     date: new Date(),\r\n    //     allergies: \"None\",\r\n    //     conditions: \"None\",\r\n    //     medications: \"None\",\r\n    //     immunizations: \"None\",\r\n    //     procedures: \"None\"},\r\n    //   { id: \"test-2\",\r\n    //     doctor: \"Dr. Jane Doe\",\r\n    //     reason_for_appointment: \"Checkup\",\r\n    //     treatment: \"None\",\r\n    //     date: new Date(),\r\n    //     allergies: \"None\",\r\n    //     conditions: \"None\",\r\n    //     medications: \"None\",\r\n    //     immunizations: \"None\",\r\n    //     procedures: \"None\"},\r\n    //     { id: \"test-3\",\r\n    //     doctor: \"Dr. Jane Doe\",\r\n    //     reason_for_appointment: \"Checkup\",\r\n    //     treatment: \"None\",\r\n    //     date: new Date(),\r\n    //     allergies: \"None\",\r\n    //     conditions: \"None\",\r\n    //     medications: \"None\",\r\n    //     immunizations: \"None\",\r\n    //     procedures: \"None\"\r\n    //     },\r\n    //     { id: \"test-1\", \r\n    //       doctor: \"Dr. John Doe\", \r\n    //       reason_for_appointment: \"Checkup\",\r\n    //       treatment: \"None\",\r\n    //       date: new Date(),\r\n    //       allergies: \"None\",\r\n    //       conditions: \"None\",\r\n    //       medications: \"None\",\r\n    //       immunizations: \"None\",\r\n    //       procedures: \"None\"},\r\n    //     { id: \"test-2\",\r\n    //       doctor: \"Dr. Jane Doe\",\r\n    //       reason_for_appointment: \"Checkup\",\r\n    //       treatment: \"None\",\r\n    //       date: new Date(),\r\n    //       allergies: \"None\",\r\n    //       conditions: \"None\",\r\n    //       medications: \"None\",\r\n    //       immunizations: \"None\",\r\n    //       procedures: \"None\"},\r\n    //       { id: \"test-3\",\r\n    //       doctor: \"Dr. Jane Doe\",\r\n    //       reason_for_appointment: \"Checkup\",\r\n    //       treatment: \"None\",\r\n    //       date: new Date(),\r\n    //       allergies: \"None\",\r\n    //       conditions: \"None\",\r\n    //       medications: \"None\",\r\n    //       immunizations: \"None\",\r\n    //       procedures: \"None\"\r\n    //       },\r\n    //       { id: \"test-1\", \r\n    //         doctor: \"Dr. John Doe\", \r\n    //         reason_for_appointment: \"Checkup\",\r\n    //         treatment: \"None\",\r\n    //         date: new Date(),\r\n    //         allergies: \"None\",\r\n    //         conditions: \"None\",\r\n    //         medications: \"None\",\r\n    //         immunizations: \"None\",\r\n    //         procedures: \"None\"},\r\n    //       { id: \"test-2\",\r\n    //         doctor: \"Dr. Jane Doe\",\r\n    //         reason_for_appointment: \"Checkup\",\r\n    //         treatment: \"None\",\r\n    //         date: new Date(),\r\n    //         allergies: \"None\",\r\n    //         conditions: \"None\",\r\n    //         medications: \"None\",\r\n    //         immunizations: \"None\",\r\n    //         procedures: \"None\"},\r\n    //         { id: \"test-3\",\r\n    //         doctor: \"Dr. Jane Doe\",\r\n    //         reason_for_appointment: \"Checkup\",\r\n    //         treatment: \"None\",\r\n    //         date: new Date(),\r\n    //         allergies: \"None\",\r\n    //         conditions: \"None\",\r\n    //         medications: \"None\",\r\n    //         immunizations: \"None\",\r\n    //         procedures: \"None\"\r\n    //         }\r\n    //       ,\r\n    //       { id: \"test-1\", \r\n    //         doctor: \"Dr. John Doe\", \r\n    //         reason_for_appointment: \"Checkup\",\r\n    //         treatment: \"None\",\r\n    //         date: new Date(),\r\n    //         allergies: \"None\",\r\n    //         conditions: \"None\",\r\n    //         medications: \"None\",\r\n    //         immunizations: \"None\",\r\n    //         procedures: \"None\"},\r\n    //       { id: \"test-2\",\r\n    //         doctor: \"Dr. Jane Doe\",\r\n    //         reason_for_appointment: \"Checkup\",\r\n    //         treatment: \"None\",\r\n    //         date: new Date(),\r\n    //         allergies: \"None\",\r\n    //         conditions: \"None\",\r\n    //         medications: \"None\",\r\n    //         immunizations: \"None\",\r\n    //         procedures: \"None\"},\r\n    //         { id: \"test-3\",\r\n    //         doctor: \"Dr. Jane Doe\",\r\n    //         reason_for_appointment: \"Checkup\",\r\n    //         treatment: \"None\",\r\n    //         date: new Date(),\r\n    //         allergies: \"None\",\r\n    //         conditions: \"None\",\r\n    //         medications: \"None\",\r\n    //         immunizations: \"None\",\r\n    //         procedures: \"None\"\r\n    //         }\r\n    //   // Add more test data...\r\n    // ];\r\n  };\r\n\r\n  const AppointmentList: React.FC = () => {\r\n    const [data, setData] = useState<AppointmentEntry[]>([]);\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        const appointments = await getAppointments();\r\n        setData(appointments);\r\n      };\r\n      fetchData();\r\n    }, []);\r\n\r\n    // const handleSubmit = (updatedData: AppointmentEntry[]) => {\r\n    //   console.log(\"Submitted data:\", updatedData);\r\n    //   // Perform API call to submit data here\r\n    // };\r\n\r\n  return (\r\n    <section className=\"py-24\" style={{maxHeight: \"100vh\", overflow: \"auto\"}} /* Add custom styles here */>\r\n      <div className=\"flex-container\">\r\n      <h1 className=\"text-4xl font-bold\">Appointments</h1>\r\n      <div className=\"container mx-auto py-10 overflow-auto\">\r\n        <DataTable columns={columns} data={data} \r\n        // onSubmit={handleSubmit} \r\n        />\r\n      </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default AppointmentList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAA2BC,OAAO,QAAQ,uCAAuC;AACjF,SAASC,SAAS,QAAQ,0CAA0C;AAEpE,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAyC;EAC7D;EACA,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC3C,IAAIF,KAAK,IAAIA,KAAK,CAACG,UAAU,CAAC,SAAS,CAAC,EAAE;IACxCH,KAAK,GAAGA,KAAK,CAACI,KAAK,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;EACnC;EAEA,MAAMC,SAAS,GAAGN,KAAK;EACvB,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAAC,uDAAuD,EAAE;IAC/EC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,IAAIV,KAAK,IAAI;QAAEW,aAAa,EAAEX;MAAM,CAAC,CAAC,CAAE;IAC1C;EACF,CAAC,CAAC;EACF,MAAMY,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;EAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACA,IAAI,CAAC;EACtB,OAAOA,IAAI,CAACA,IAAI;;EAEheAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACL,IAAI,EAAEM,OAAO,CAAC,GAAGzB,QAAQ,CAAqB,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMyB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,YAAY,GAAG,MAAMrB,eAAe,CAAC,CAAC;MAC5CmB,OAAO,CAACE,YAAY,CAAC;IACvB,CAAC;IACDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;;EAEF,oBACErB,OAAA;IAASuB,SAAS,EAAC,OAAO;IAACC,KAAK,EAAE;MAACC,SAAS,EAAE,OAAO;MAAEC,QAAQ,EAAE;IAAM,CAAE,CAAC;IAAAC,QAAA,eACxE3B,OAAA;MAAKuB,SAAS,EAAC,gBAAgB;MAAAI,QAAA,gBAC/B3B,OAAA;QAAIuB,SAAS,EAAC,oBAAoB;QAAAI,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpD/B,OAAA;QAAKuB,SAAS,EAAC,uCAAuC;QAAAI,QAAA,eACpD3B,OAAA,CAACF,SAAS;UAACD,OAAO,EAAEA,OAAQ;UAACiB,IAAI,EAAEA;UACnC;QAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAAAZ,EAAA,CA5BOD,eAAyB;AAAAc,EAAA,GAAzBd,eAAyB;AA8BjC,eAAeA,eAAe;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}