{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Downloads\\\\MediCore\\\\frontend\\\\src\\\\ComponentsKevin\\\\testTable\\\\columns.tsx\";\nimport { MoreHorizontal } from \"lucide-react\";\nimport { Button } from \"../../components/ui/button\";\n// Import ShadCN Input\n\nimport EditableCell from \"./EditableCell\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from \"../../components/ui/dropdown-menu\";\n\n// This type is used to define the shape of our data.\n// You can use a Zod schema here if you want.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const columns = [{\n  accessorKey: \"id\",\n  header: \"Appointment ID\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableCell, {\n    value: row.original.id,\n    onChange: () => {}\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 24\n  }, this) // Read-only\n}, {\n  accessorKey: \"doctor\",\n  header: \"Doctor\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableCell, {\n    value: row.original.doctor,\n    onChange: val => row.original.doctor = val\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 24\n  }, this)\n}, {\n  accessorKey: \"reason_for_appointment\",\n  header: \"Reason for Appointment\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableCell, {\n    value: row.original.reason_for_appointment,\n    onChange: val => row.original.reason_for_appointment = val\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 24\n  }, this)\n}, {\n  accessorKey: \"treatment\",\n  header: \"Treatment\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableCell, {\n    value: row.original.treatment,\n    onChange: val => row.original.treatment = val\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 24\n  }, this)\n}, {\n  accessorKey: \"date\",\n  header: \"Date\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableCell, {\n    type: \"date\",\n    value: row.original.date.toISOString().slice(0, 10),\n    onChange: val => row.original.date = new Date(val)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this)\n}, {\n  accessorKey: \"allergies\",\n  header: \"Allergies\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableCell, {\n    value: row.original.allergies,\n    onChange: val => row.original.allergies = val\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 24\n  }, this)\n}, {\n  accessorKey: \"conditions\",\n  header: \"Conditions\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableCell, {\n    value: row.original.conditions,\n    onChange: val => row.original.conditions = val\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 24\n  }, this)\n}, {\n  accessorKey: \"medications\",\n  header: \"Medications\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableCell, {\n    value: row.original.medications,\n    onChange: val => row.original.medications = val\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 24\n  }, this)\n}, {\n  accessorKey: \"immunizations\",\n  header: \"Immunizations\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableCell, {\n    value: row.original.immunizations,\n    onChange: val => row.original.immunizations = val\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 24\n  }, this)\n}, {\n  accessorKey: \"procedures\",\n  header: \"Procedures\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableCell, {\n    value: row.original.procedures,\n    onChange: val => row.original.procedures = val\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 24\n  }, this)\n}, {\n  header: \"Modify Appointment\",\n  id: \"actions\",\n  cell: ({\n    row\n  }) => {\n    const payment = row.original;\n    return /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      children: [/*#__PURE__*/_jsxDEV(DropdownMenuTrigger, {\n        asChild: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"ghost\",\n          className: \"h-8 w-8 p-0\",\n          children: /*#__PURE__*/_jsxDEV(MoreHorizontal, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DropdownMenuContent, {\n        align: \"end\",\n        children: [/*#__PURE__*/_jsxDEV(DropdownMenuLabel, {\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DropdownMenuItem, {\n          onClick: () => navigator.clipboard.writeText(payment.id),\n          children: \"Copy payment ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DropdownMenuSeparator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DropdownMenuItem, {\n          children: \"View customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DropdownMenuItem, {\n          children: \"View payment details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this);\n  }\n}];","map":{"version":3,"names":["_jsxFileName","MoreHorizontal","Button","EditableCell","DropdownMenu","DropdownMenuContent","DropdownMenuItem","DropdownMenuLabel","DropdownMenuSeparator","DropdownMenuTrigger","jsxDEV","_jsxDEV","columns","accessorKey","header","cell","row","value","original","id","onChange","fileName","lineNumber","columnNumber","doctor","val","reason_for_appointment","treatment","type","date","toISOString","slice","Date","allergies","conditions","medications","immunizations","procedures","payment","children","asChild","variant","className","align","onClick","navigator","clipboard","writeText"],"sources":["C:/Users/kevin/Downloads/MediCore/frontend/src/ComponentsKevin/testTable/columns.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { ColumnDef } from \"@tanstack/react-table\"\r\n\r\nimport { MoreHorizontal } from \"lucide-react\"\r\n \r\nimport { Button } from \"../../components/ui/button\"\r\n\r\nimport { Input } from \"../../components/ui/input\"; // Import ShadCN Input\r\n\r\nimport EditableCell from \"./EditableCell\";\r\n\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger,\r\n} from \"../../components/ui/dropdown-menu\"\r\n\r\n// This type is used to define the shape of our data.\r\n// You can use a Zod schema here if you want.\r\nexport type AppointmentEntry = {\r\n  id: string\r\n  doctor: string\r\n  reason_for_appointment: string,\r\n  treatment: string,\r\n  date: Date,\r\n  allergies: string,\r\n  conditions: string,\r\n  medications: string,\r\n  immunizations: string,\r\n  procedures: string\r\n}\r\n\r\nexport const columns: ColumnDef<AppointmentEntry>[] = [\r\n  {\r\n    accessorKey: \"id\",\r\n    header: \"Appointment ID\",\r\n    cell: ({ row }) => <EditableCell value={row.original.id} onChange={() => {}} />, // Read-only\r\n  },\r\n  {\r\n    accessorKey: \"doctor\",\r\n    header: \"Doctor\",\r\n    cell: ({ row }) => <EditableCell value={row.original.doctor} onChange={(val) => (row.original.doctor = val)} />,\r\n  },\r\n  {\r\n    accessorKey: \"reason_for_appointment\",\r\n    header: \"Reason for Appointment\",\r\n    cell: ({ row }) => <EditableCell value={row.original.reason_for_appointment} onChange={(val) => (row.original.reason_for_appointment = val)} />,\r\n  },\r\n  {\r\n    accessorKey: \"treatment\",\r\n    header: \"Treatment\",\r\n    cell: ({ row }) => <EditableCell value={row.original.treatment} onChange={(val) => (row.original.treatment = val)} />,\r\n  },\r\n  {\r\n    accessorKey: \"date\",\r\n    header: \"Date\",\r\n    cell: ({ row }) => (\r\n      <EditableCell\r\n        type=\"date\"\r\n        value={row.original.date.toISOString().slice(0, 10)}\r\n        onChange={(val) => (row.original.date = new Date(val))}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: \"allergies\",\r\n    header: \"Allergies\",\r\n    cell: ({ row }) => <EditableCell value={row.original.allergies} onChange={(val) => (row.original.allergies = val)} />,\r\n  },\r\n  {\r\n    accessorKey: \"conditions\",\r\n    header: \"Conditions\",\r\n    cell: ({ row }) => <EditableCell value={row.original.conditions} onChange={(val) => (row.original.conditions = val)} />,\r\n  },\r\n  {\r\n    accessorKey: \"medications\",\r\n    header: \"Medications\",\r\n    cell: ({ row }) => <EditableCell value={row.original.medications} onChange={(val) => (row.original.medications = val)} />,\r\n  },\r\n  {\r\n    accessorKey: \"immunizations\",\r\n    header: \"Immunizations\",\r\n    cell: ({ row }) => <EditableCell value={row.original.immunizations} onChange={(val) => (row.original.immunizations = val)} />,\r\n  },\r\n  {\r\n    accessorKey: \"procedures\",\r\n    header: \"Procedures\",\r\n    cell: ({ row }) => <EditableCell value={row.original.procedures} onChange={(val) => (row.original.procedures = val)} />,\r\n  },\r\n  {\r\n    header: \"Modify Appointment\",\r\n    id: \"actions\",\r\n    cell: ({ row }) => {\r\n      const payment = row.original\r\n \r\n      return (\r\n        <DropdownMenu>\r\n          <DropdownMenuTrigger asChild>\r\n            <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\r\n              <MoreHorizontal className=\"h-4 w-4\" />\r\n            </Button>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent align=\"end\">\r\n            <DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n            <DropdownMenuItem\r\n              onClick={() => navigator.clipboard.writeText(payment.id)}\r\n            >\r\n              Copy payment ID\r\n            </DropdownMenuItem>\r\n            <DropdownMenuSeparator />\r\n            <DropdownMenuItem>View customer</DropdownMenuItem>\r\n            <DropdownMenuItem>View payment details</DropdownMenuItem>\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n      )\r\n    },\r\n  },\r\n]\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}