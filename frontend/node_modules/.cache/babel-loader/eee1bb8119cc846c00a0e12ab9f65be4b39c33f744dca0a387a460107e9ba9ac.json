{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Downloads\\\\MediCore\\\\frontend\\\\src\\\\ComponentsKevin\\\\testTable\\\\columns.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"../../components/ui/button\";\n\n// Define AppointmentEntry type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const columns = [{\n  accessorKey: \"id\",\n  header: \"Appointment ID\",\n  cell: ({\n    row\n  }) => row.original.id // Display ID only, not editable\n}, {\n  accessorKey: \"doctor\",\n  header: \"Doctor\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableField, {\n    row: row,\n    field: \"doctor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 24\n  }, this)\n}, {\n  accessorKey: \"reason_for_appointment\",\n  header: \"Reason for Appointment\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableField, {\n    row: row,\n    field: \"reason_for_appointment\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 24\n  }, this)\n}, {\n  accessorKey: \"treatment\",\n  header: \"Treatment\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableField, {\n    row: row,\n    field: \"treatment\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 24\n  }, this)\n}, {\n  accessorKey: \"date\",\n  header: \"Date\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableField, {\n    row: row,\n    field: \"date\",\n    type: \"date\",\n    transformInput: value => value.toISOString().slice(0, 10),\n    transformOutput: value => new Date(value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this)\n}, {\n  accessorKey: \"allergies\",\n  header: \"Allergies\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableField, {\n    row: row,\n    field: \"allergies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 24\n  }, this)\n}, {\n  accessorKey: \"conditions\",\n  header: \"Conditions\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableField, {\n    row: row,\n    field: \"conditions\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 24\n  }, this)\n}, {\n  accessorKey: \"medications\",\n  header: \"Medications\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableField, {\n    row: row,\n    field: \"medications\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 24\n  }, this)\n}, {\n  accessorKey: \"immunizations\",\n  header: \"Immunizations\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableField, {\n    row: row,\n    field: \"immunizations\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 24\n  }, this)\n}, {\n  accessorKey: \"procedures\",\n  header: \"Procedures\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(EditableField, {\n    row: row,\n    field: \"procedures\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 24\n  }, this)\n}, {\n  header: \"Actions\",\n  id: \"actions\",\n  cell: ({\n    row\n  }) => /*#__PURE__*/_jsxDEV(SubmitButton, {\n    row: row\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 24\n  }, this)\n}];\n\n// Editable field component\nconst EditableField = ({\n  row,\n  field,\n  type = \"text\",\n  transformInput,\n  transformOutput\n}) => {\n  _s();\n  const [value, setValue] = useState(transformInput ? transformInput(row.original[field]) : row.original[field]);\n  const handleChange = e => {\n    const newValue = e.target.value;\n    setValue(newValue);\n    row.original[field] = transformOutput ? transformOutput(newValue) : newValue;\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: type,\n    value: value,\n    onChange: handleChange,\n    className: \"border rounded px-2 py-1 w-full\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n// Submit button component\n_s(EditableField, \"Yo6ERYlP7pZ7amsk1JGCBasp8Bo=\");\n_c = EditableField;\nconst SubmitButton = ({\n  row\n}) => {\n  const handleSubmit = () => {\n    console.log(\"Submitting updated appointment:\", row.original);\n    // Perform API call or state update here\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: handleSubmit,\n    className: \"bg-blue-500 text-white\",\n    children: \"Submit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_c2 = SubmitButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"EditableField\");\n$RefreshReg$(_c2, \"SubmitButton\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","React","useState","Button","jsxDEV","_jsxDEV","columns","accessorKey","header","cell","row","original","id","EditableField","field","fileName","lineNumber","columnNumber","type","transformInput","value","toISOString","slice","transformOutput","Date","SubmitButton","setValue","handleChange","e","newValue","target","onChange","className","_c","handleSubmit","console","log","onClick","children","_c2","$RefreshReg$"],"sources":["C:/Users/kevin/Downloads/MediCore/frontend/src/ComponentsKevin/testTable/columns.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { ColumnDef } from \"@tanstack/react-table\";\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"../../components/ui/button\";\r\n\r\n// Define AppointmentEntry type\r\nexport type AppointmentEntry = {\r\n  id: string;\r\n  doctor: string;\r\n  reason_for_appointment: string;\r\n  treatment: string;\r\n  date: Date;\r\n  allergies: string;\r\n  conditions: string;\r\n  medications: string;\r\n  immunizations: string;\r\n  procedures: string;\r\n};\r\n\r\nexport const columns: ColumnDef<AppointmentEntry>[] = [\r\n  {\r\n    accessorKey: \"id\",\r\n    header: \"Appointment ID\",\r\n    cell: ({ row }) => row.original.id, // Display ID only, not editable\r\n  },\r\n  {\r\n    accessorKey: \"doctor\",\r\n    header: \"Doctor\",\r\n    cell: ({ row }) => <EditableField row={row} field=\"doctor\" />,\r\n  },\r\n  {\r\n    accessorKey: \"reason_for_appointment\",\r\n    header: \"Reason for Appointment\",\r\n    cell: ({ row }) => <EditableField row={row} field=\"reason_for_appointment\" />,\r\n  },\r\n  {\r\n    accessorKey: \"treatment\",\r\n    header: \"Treatment\",\r\n    cell: ({ row }) => <EditableField row={row} field=\"treatment\" />,\r\n  },\r\n  {\r\n    accessorKey: \"date\",\r\n    header: \"Date\",\r\n    cell: ({ row }) => (\r\n      <EditableField\r\n        row={row}\r\n        field=\"date\"\r\n        type=\"date\"\r\n        transformInput={(value: Date) => value.toISOString().slice(0, 10)}\r\n        transformOutput={(value: string) => new Date(value)}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: \"allergies\",\r\n    header: \"Allergies\",\r\n    cell: ({ row }) => <EditableField row={row} field=\"allergies\" />,\r\n  },\r\n  {\r\n    accessorKey: \"conditions\",\r\n    header: \"Conditions\",\r\n    cell: ({ row }) => <EditableField row={row} field=\"conditions\" />,\r\n  },\r\n  {\r\n    accessorKey: \"medications\",\r\n    header: \"Medications\",\r\n    cell: ({ row }) => <EditableField row={row} field=\"medications\" />,\r\n  },\r\n  {\r\n    accessorKey: \"immunizations\",\r\n    header: \"Immunizations\",\r\n    cell: ({ row }) => <EditableField row={row} field=\"immunizations\" />,\r\n  },\r\n  {\r\n    accessorKey: \"procedures\",\r\n    header: \"Procedures\",\r\n    cell: ({ row }) => <EditableField row={row} field=\"procedures\" />,\r\n  },\r\n  {\r\n    header: \"Actions\",\r\n    id: \"actions\",\r\n    cell: ({ row }) => <SubmitButton row={row} />,\r\n  },\r\n];\r\n\r\n// Editable field component\r\nconst EditableField: React.FC<{\r\n  row: any;\r\n  field: keyof AppointmentEntry;\r\n  type?: string;\r\n  transformInput?: (value: any) => any;\r\n  transformOutput?: (value: any) => any;\r\n}> = ({ row, field, type = \"text\", transformInput, transformOutput }) => {\r\n  const [value, setValue] = useState(\r\n    transformInput ? transformInput(row.original[field]) : row.original[field]\r\n  );\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = e.target.value;\r\n    setValue(newValue);\r\n    row.original[field] = transformOutput ? transformOutput(newValue) : newValue;\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type={type}\r\n      value={value}\r\n      onChange={handleChange}\r\n      className=\"border rounded px-2 py-1 w-full\"\r\n    />\r\n  );\r\n};\r\n\r\n// Submit button component\r\nconst SubmitButton: React.FC<{ row: any }> = ({ row }) => {\r\n  const handleSubmit = () => {\r\n    console.log(\"Submitting updated appointment:\", row.original);\r\n    // Perform API call or state update here\r\n  };\r\n\r\n  return (\r\n    <Button onClick={handleSubmit} className=\"bg-blue-500 text-white\">\r\n      Submit\r\n    </Button>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}