{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Downloads\\\\MediCore\\\\frontend\\\\src\\\\ComponentsKevin\\\\testTable\\\\AppointmentsTable.tsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentsTable = ({\n  data\n}) => {\n  _s();\n  const [tableData, setTableData] = useState(data || []);\n  const columns = [{\n    accessorKey: \"id\",\n    header: \"Appointment ID\"\n  }, {\n    accessorKey: \"doctor\",\n    header: \"Doctor\"\n  }, {\n    accessorKey: \"reason_for_appointment\",\n    header: \"Reason for Appointment\"\n  }, {\n    accessorKey: \"treatment\",\n    header: \"Treatment\"\n  }, {\n    accessorKey: \"date\",\n    header: \"Date\"\n  }, {\n    accessorKey: \"allergies\",\n    header: \"Allergies\"\n  }, {\n    accessorKey: \"conditions\",\n    header: \"Conditions\"\n  }, {\n    accessorKey: \"medications\",\n    header: \"Medications\"\n  }, {\n    accessorKey: \"immunizations\",\n    header: \"Immunizations\"\n  }, {\n    accessorKey: \"procedures\",\n    header: \"Procedures\"\n  }];\n  const table = useReactTable({\n    data: tableData,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    initialState: {\n      pagination: {\n        pageSize: 10\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n        children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(TableHead, {\n            children: header.isPlaceholder ? null : header.renderHeader()\n          }, header.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 19\n          }, this))\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: table.getRowModel().rows.length > 0 ? table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: cell.column.id === \"id\" ? cell.renderValue() : /*#__PURE__*/_jsxDEV(Input, {\n              value: cell.getValue(),\n              onChange: e => handleInputChange(row.index, cell.column.id, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this)\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: columns.length,\n            children: \"No data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n};\n_s(AppointmentsTable, \"7qDlVHSl/fW+z7DLBWmYvDV9meY=\", true);\n_c = AppointmentsTable;\nvar _c;\n$RefreshReg$(_c, \"AppointmentsTable\");","map":{"version":3,"names":["AppointmentsTable","data","_s","tableData","setTableData","useState","columns","accessorKey","header","table","useReactTable","getCoreRowModel","getPaginationRowModel","initialState","pagination","pageSize","_jsxDEV","children","Table","TableHeader","getHeaderGroups","map","headerGroup","TableRow","headers","TableHead","isPlaceholder","renderHeader","id","fileName","_jsxFileName","lineNumber","columnNumber","TableBody","getRowModel","rows","length","row","getVisibleCells","cell","TableCell","column","renderValue","Input","value","getValue","onChange","e","handleInputChange","index","target","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/kevin/Downloads/MediCore/frontend/src/ComponentsKevin/testTable/AppointmentsTable.tsx"],"sourcesContent":["const AppointmentsTable: React.FC<{ data: AppointmentEntry[] }> = ({ data }) => {\r\n    const [tableData, setTableData] = useState<AppointmentEntry[]>(data || []);\r\n  \r\n    const columns: ColumnDef<AppointmentEntry>[] = [\r\n      { accessorKey: \"id\", header: \"Appointment ID\" },\r\n      { accessorKey: \"doctor\", header: \"Doctor\" },\r\n      { accessorKey: \"reason_for_appointment\", header: \"Reason for Appointment\" },\r\n      { accessorKey: \"treatment\", header: \"Treatment\" },\r\n      { accessorKey: \"date\", header: \"Date\" },\r\n      { accessorKey: \"allergies\", header: \"Allergies\" },\r\n      { accessorKey: \"conditions\", header: \"Conditions\" },\r\n      { accessorKey: \"medications\", header: \"Medications\" },\r\n      { accessorKey: \"immunizations\", header: \"Immunizations\" },\r\n      { accessorKey: \"procedures\", header: \"Procedures\" },\r\n    ];\r\n  \r\n    const table = useReactTable({\r\n      data: tableData,\r\n      columns,\r\n      getCoreRowModel: getCoreRowModel(),\r\n      getPaginationRowModel: getPaginationRowModel(),\r\n      initialState: { pagination: { pageSize: 10 } },\r\n    });\r\n  \r\n    return (\r\n      <div>\r\n        <Table>\r\n          <TableHeader>\r\n            {table.getHeaderGroups().map((headerGroup) => (\r\n              <TableRow key={headerGroup.id}>\r\n                {headerGroup.headers.map((header) => (\r\n                  <TableHead key={header.id}>{header.isPlaceholder ? null : header.renderHeader()}</TableHead>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableHeader>\r\n          <TableBody>\r\n            {table.getRowModel().rows.length > 0 ? (\r\n              table.getRowModel().rows.map((row) => (\r\n                <TableRow key={row.id}>\r\n                  {row.getVisibleCells().map((cell) => (\r\n                    <TableCell key={cell.id}>\r\n                      {cell.column.id === \"id\" ? (\r\n                        cell.renderValue()\r\n                      ) : (\r\n                        <Input\r\n                          value={cell.getValue() as string}\r\n                          onChange={(e) =>\r\n                            handleInputChange(row.index, cell.column.id, e.target.value)\r\n                          }\r\n                        />\r\n                      )}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              ))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell colSpan={columns.length}>No data available</TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  };\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}