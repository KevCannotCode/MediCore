{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Downloads\\\\MediCore\\\\frontend\\\\src\\\\ComponentsKevin\\\\testTable\\\\EditableCell.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Input } from \"../../components/ui/input\"; // ShadCN Input component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditableCell = ({\n  value,\n  type = \"text\",\n  onChange\n}) => {\n  _s();\n  const [editingValue, setEditingValue] = useState(value);\n  const handleBlur = () => {\n    onChange(editingValue); // Notify parent of the updated value\n  };\n  return /*#__PURE__*/_jsxDEV(Input, {\n    style: {\n      padding: \"0.5rem\",\n      fontSize: \"0.875rem\"\n    } // Adjust font size here\n    ,\n    type: type,\n    value: editingValue,\n    onChange: e => setEditingValue(e.target.value),\n    onBlur: handleBlur,\n    className: \"w-full\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(EditableCell, \"r773lDCaWGjcSqtE9VpEFxweEyQ=\");\n_c = EditableCell;\nexport default EditableCell;\nvar _c;\n$RefreshReg$(_c, \"EditableCell\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","React","useState","Input","jsxDEV","_jsxDEV","EditableCell","value","type","onChange","editingValue","setEditingValue","handleBlur","style","padding","fontSize","e","target","onBlur","className","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kevin/Downloads/MediCore/frontend/src/ComponentsKevin/testTable/EditableCell.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Input } from \"../../components/ui/input\"; // ShadCN Input component\r\n\r\ninterface EditableCellProps {\r\n  value: any;\r\n  type?: string;\r\n  onChange: (newValue: any) => void;\r\n}\r\n\r\nconst EditableCell: React.FC<EditableCellProps> = ({ value, type = \"text\", onChange }) => {\r\n  const [editingValue, setEditingValue] = useState(value);\r\n\r\n  const handleBlur = () => {\r\n    onChange(editingValue); // Notify parent of the updated value\r\n  };\r\n\r\nreturn (\r\n    <Input style={{ padding: \"0.5rem\", fontSize: \"0.875rem\" }} // Adjust font size here\r\n        type={type}\r\n        value={editingValue}\r\n        onChange={(e) => setEditingValue(e.target.value)}\r\n        onBlur={handleBlur}\r\n        className=\"w-full\"\r\n    />\r\n);\r\n};\r\n\r\nexport default EditableCell;\r\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEb,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQnD,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,IAAI,GAAG,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAV,EAAA;EACxF,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAACK,KAAK,CAAC;EAEvD,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvBH,QAAQ,CAACC,YAAY,CAAC,CAAC,CAAC;EAC1B,CAAC;EAEH,oBACIL,OAAA,CAACF,KAAK;IAACU,KAAK,EAAE;MAAEC,OAAO,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAW,CAAE,CAAC;IAAA;IACvDP,IAAI,EAAEA,IAAK;IACXD,KAAK,EAAEG,YAAa;IACpBD,QAAQ,EAAGO,CAAC,IAAKL,eAAe,CAACK,CAAC,CAACC,MAAM,CAACV,KAAK,CAAE;IACjDW,MAAM,EAAEN,UAAW;IACnBO,SAAS,EAAC;EAAQ;IAAAC,QAAA,EAAAtB,YAAA;IAAAuB,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEN,CAAC;AAACvB,EAAA,CAhBIO,YAAyC;AAAAiB,EAAA,GAAzCjB,YAAyC;AAkB/C,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}